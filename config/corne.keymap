/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"

/ {
    combos {
        compatible = "zmk,combos";

        l_ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <LT1 LM1>;
        };

        r_ctrl {
            bindings = <&kp RCTRL>;
            key-positions = <RT1 RM1>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <RT0 RT1 RM0 RM1>;
        };

        num_layer {
            bindings = <&mo 3>;
            key-positions = <LM2 LM3>;
        };

        admin_layer {
            bindings = <&mo 4>;
            key-positions = <RH0 RB4>;
        };

	ret_r {
            bindings = <&kp RET>;
            key-positions = <RM4 RB4>;
	};

	ret_l {
            bindings = <&kp RET>;
            key-positions = <LB4 LM4>;
	};

	backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <RM1 RM2>;
	};

	c_backspace {
	    bindings = <&kp RC(BACKSPACE)>;
            key-positions = <RM2 RM3>;
	};

	del {
            bindings = <&kp DEL>;
            key-positions = <RM1 RM3>;
	};

	underscore {
	  bindings = <&kp UNDERSCORE>;
            key-positions = <RB1 RB2>;
	};

	equal {
	  bindings = <&kp EQUAL>;
            key-positions = <RM1 RB1>;
	};

	minus {
	  bindings = <&kp KP_MINUS>;
            key-positions = <RM0 RM1>;
	};

	minus {
	  bindings = <&kp KP_PLUS>;
            key-positions = <RM0 RM1>;
	};

	c_x {
	    bindings = <&kp RC(X)>;
            key-positions = <LB3 LM3>;
	};

	c_c {
	    bindings = <&kp RC(C)>;
            key-positions = <LB2 LM2>;
	};

	c_v {
	    bindings = <&kp RC(V)>;
            key-positions = <LB1 LM1>;
	};


    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q  &kp W     &kp E           &kp R         &kp T         &kp Y    &kp U          &kp I         &kp O     &kp P     &none
&none  &kp A  &kp S     &kp D           &kp F         &kp G         &kp H    &kp J          &kp K         &kp L     &kp SEMI  &none
&none  &kp Z  &kp X     &kp C           &kp V         &kp B         &kp N    &kp M          &kp COMMA     &kp DOT   &kp FSLH  &none
                        &mt LALT  ESC   &kp LSHFT     &lt 2 TAB     &mo 1    &kp SPACE      &kp LGUI
            >;
        };

        lower_layer {
            bindings = <
&none         &none         &none      &none        &none       &none       &none     &none     &none      &none      &none      &none
&none         &kp LEFT_GUI  &kp PG_UP  &kp PG_DN    &kp HOME    &kp END     &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &kp SQT    &none
&none         &none         &none      &none        &kp INS     &none       &none     &none     &none      &none      &kp GRAVE  &none
                                       &kp LALT     &trans      &trans      &trans    &trans    &kp LGUI
            >;
        };

        raise_layer {
            bindings = <
&none     &kp EXCL   &kp AT     &kp HASH   &kp DLLR    &kp PRCNT    &kp ASTERISK   &kp AMPS         &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &kp CARET  &none
&none     &kp LGUI   &kp PG_UP  &kp PG_DN  &kp HOME    &kp END      &kp KP_MINUS   &kp UNDERSCORE   &kp LBKT               &kp RBKT               &kp BSLH  &none
&none     &none      &none      &none      &kp INS     &none        &kp KP_PLUS    &kp EQUAL        &kp LBRC               &kp RBRC               &kp PIPE  &none
                                &kp LALT   &trans      &trans       &trans         &trans           &kp LGUI
            >;
        };

        numbers {
            bindings = <
&none         &none  &none     &none        &none    &none    &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_DIVIDE  &none
&none  &kp LEFT_GUI  &none     &none        &none    &none    &kp KP_MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6      &kp COLON  &none
&none    &kp LSHIFT  &none     &none        &none    &none     &kp KP_PLUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp COMMA  &none
                            &kp LALT  &kp LS(TAB)  &kp TAB    &kp NUMBER_0     &kp SPACE    &kp PERIOD
            >;
        };

        admin {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &bootloader        &none         &none       &none  &bt BT_CLR  &none
&none         &none         &none         &none         &none         &none    &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_NEXT       &none  &none
&none         &none         &none         &none         &none         &none         &none              &none         &none       &none       &none  &none
                                          &none         &none         &none         &none   &kp C_PLAY_PAUSE         &none
            >;
        };
    };
};
